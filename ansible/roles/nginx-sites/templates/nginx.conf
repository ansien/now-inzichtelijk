# Catch all non-HTTPS requests and redirect them to the HTTPS domain.
server {
    listen 80;
    listen [::]:80;
    server_name {{ domain.name }} www.{{ domain.name }};
    return 307 https://{{ domain.name }}$request_uri;
}

# Catch all HTTPS requests.
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name {{ domain.name }} www.{{ domain.name }};
    root /home/deploy/{{ deployer.directory }}/current/public;

    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/{{ domain.name }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ domain.name }}/privkey.pem;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets on;
    ssl_protocols TLSv1.2;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
    ssl_prefer_server_ciphers on;

    client_max_body_size 25m;

    # HSTS
    add_header Strict-Transport-Security max-age=15768000;

    # OCSP Stapling
    ssl_stapling on;
    ssl_stapling_verify on;

    ssl_trusted_certificate /etc/letsencrypt/live/{{ domain.name }}/chain.pem;

    location / {
        try_files $uri /index.php$is_args$args;
    }

    location ~ ^/index\.php(/|$) {
        fastcgi_pass unix:/run/php/php{{ php.version }}-fpm.sock;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;
        internal;
    }

    location ~ \.php$ {
        return 404;
    }

    access_log /var/log/nginx/{{ domain.name }}_access.log;
    error_log /var/log/nginx/{{ domain.name }}_error.log;
}
